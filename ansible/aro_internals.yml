- name: Get backend info
  block:
  - name: Check for backend service
    k8s_info:
      kind: Deployment
      namespace: ostoy
      name: ostoy-microservice
    register: _backend_service_result

  - name: Set backend fact if the service is deployed
    set_fact:
      backend_status: "success"
      cacheable: yes
    when: _backend_service_result.resources
  when: backend_status is not defined

- name: Get frontend info
  block:
  - name: Check for frontend service
    k8s_info:
      kind: Deployment
      namespace: ostoy
      name: ostoy-frontend
    register: _frontend_service_result

  - name: Set frontend fact if the service is deployed
    set_fact:
      frontend_status: "success"
      cacheable: yes
    when: _frontend_service_result.resources
  when: frontend_status is not defined

- name: Get frontend Pod(s)
  k8s_info:
    kind: Pod
    namespace: ostoy
    label_selectors:
    - app = ostoy-frontend
    field_selectors:
    - status.phase=Running
  register: _frontend_pods

- name: Health check and file usage
  block:
  - name: Get events
    k8s_info:
      kind: Event
      namespace: ostoy
    register: _events_list

  - name: Check for app malfunction
    set_fact:
      pod_was_killed: "{{ _frontend_pods.resources | json_query('[].status.containerStatuses[?restartCount>`0`][]') | count > 0 }}"
      liveness_probe: "{{ 'Liveness probe' in (_events_list.resources | string) }}"

  - name: Set partial credit for app malfunction
    set_fact:
      malfunction_status: "info"
    when: pod_was_killed or liveness_probe

  - name: Set full credit for app malfunction
    set_fact:
      malfunction_status: "success"
      cacheable: yes
    when: pod_was_killed and liveness_probe

  - name: Check for files
    shell: >
      oc exec {{ _frontend_pods.resources[0].metadata.name }} -n ostoy -- ls /var/demo_files
    register: _file_check_result
    when: _frontend_pods.resources

  - name: Set file fact if one has been created
    set_fact:
      file_status: "success"
      cacheable: yes
    when: _file_check_result.stdout_lines is defined and 
          _file_check_result.stdout_lines | count > 1
  when: malfunction_status is not defined or
        malfunction_status != 'success' or
        file_status is not defined

- name: Check HPA
  block:
  - name: Get HPA
    k8s_info:
      kind: HorizontalPodAutoscaler
      namespace: ostoy
      name: ostoy-microservice
    register: _hpa_result
  
  - name: Set HPA status if created
    set_fact:
      hpa_status: "success"
      cacheable: yes
    when: _hpa_result.resources
  when: hpa_status is not defined

- name: Check Machine Autoscaler
  block:
  - name: Get MachineAutosclaer
    k8s_info:
      kind: MachineAutoscaler
      namespace: openshift-machine-api
      api_version: autoscaling.openshift.io/v1beta1
    register: _machine_result
  
  - name: Set Machine status if created
    set_fact:
      machine_status: "success"
      cacheable: yes
    when: _machine_result.resources
  when: machine_status is not defined

- name: Store app task results
  set_fact:
    lab2_tasks:
      - module: "1"
        status: "{{ backend_status | default('pending') }}"
      - module: "1"
        status: "{{ frontend_status | default('pending') }}"
      - module: "1"
        status: "{{ malfunction_status | default('pending') }}"
      - module: "1"
        status: "{{ file_status | default('pending') }}"
      - module: "1"
        status: "{{ hpa_status | default('pending') }}"
      - module: "1"
        status: "{{ machine_status | default('pending') }}"
